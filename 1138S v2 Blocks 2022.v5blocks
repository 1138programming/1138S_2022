{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"boolean\" id=\"[vZA5ZLU)j3R#_BD6Bd~\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">RWheelStopped</variable><variable type=\"boolean\" id=\"^C0:vWRwu.k*~iPknSy|\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">LWheelStopped</variable></variables><block type=\"v5_events_when_autonomous\" id=\"+eOcMm-65.;P47pl?sbl\" x=\"70\" y=\"30\"></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"690\" y=\"30\"><next><block type=\"v5_looks_print\" id=\"du~n8h=7QO%$KlwnRXW[\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"/z}%AI6jr};,M3`(a?sm\"><field name=\"TEXT\">Subscribe</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"T,?4-K2lo#J%R6*I*X!#\"><field name=\"MOTOR\">IntakeRollers</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"mu-`cVFT2B~%GySFA?#b\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"JMytVV;?@D5:+@9ekji0\"><field name=\"MOTOR\">Catapult</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"kj;~S@+H*2zgf@VWrD[d\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"IC[VO$qM![qlB[{m,$s1\"><field name=\"MODE\">brake</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"u/YiiQz$c7I5LQm!Ho-b\"><field name=\"MOTOR\">IntakeRollers</field><field name=\"MODE\">brake</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"3W/8D/m3BYJVE8g_%W#I\"><field name=\"MOTOR\">Catapult</field><field name=\"MODE\">hold</field><next><block type=\"v5_control_forever\" id=\"z`X^ANq]4@/MzSp,[$!B\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"0{:7ROB^anQ:P|+2Xp(]\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"}8n*dW$YM^*V}OU_g;]j\"><field name=\"comment\">Left Middle Wheel</field></shadow></value><next><block type=\"v5_control_if_then_else\" id=\"In+Bt,!^S-KD5kl0(iYc\"><value name=\"CONDITION\"><block type=\"v5_operator_and\" id=\"U,]Lu{e8,s2PtY|EIg6p\"><value name=\"OPERAND1\"><block type=\"v5_operator_less_than\" id=\"z?^Sac3e~UUZ5SJjd}C(\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"[F0Y-3Vae@`Plhyq*3-M\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"@[^VkGF5s[:duOJVF[h2\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"KtEe[2hhqK9W=aqD@FDc\"><field name=\"NUM\">5</field></shadow></value></block></value><value name=\"OPERAND2\"><block type=\"v5_operator_greater_than\" id=\"s,9(=:DWrg-n*[zgA%q$\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"}]H^XrQYuV=={Q@P(BL*\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"}9s*sL=^Fm;3///t,AaS\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"v|XoN7;I4{L[%TrQnp~Y\"><field name=\"NUM\">-5</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"GQ:3gt~[*j@N%zk#7ePA\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"GZq/Z,%wHd{@/i?/r3g;\"><field name=\"VARIABLE\" id=\"^C0:vWRwu.k*~iPknSy|\" variabletype=\"boolean\">LWheelStopped</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"=sO;_8v9$G?[f5l;d+vW\"><field name=\"MOTOR\">LeftDT</field><next><block type=\"v5_variables_set_boolean_variable\" id=\"Gsl|0`vQX,m^vG:c^vFA\"><field name=\"VARIABLE\" id=\"^C0:vWRwu.k*~iPknSy|\" variabletype=\"boolean\">LWheelStopped</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"O_egL}?[1VSz#YfH+0^W\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></statement></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_variables_set_boolean_variable\" id=\"-^Y941r}6Y[Sh8%[U0*=\"><field name=\"VARIABLE\" id=\"^C0:vWRwu.k*~iPknSy|\" variabletype=\"boolean\">LWheelStopped</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"|?y1lQ-gXW9GO[z!]${j\"><field name=\"VALUE\">true</field></shadow></value></block></statement><next><block type=\"v5_control_if_then\" id=\"3J.!ALq%dd}tM;~SDH.~\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"24UIGkeZBFJ%rAeCideX\"><field name=\"VARIABLE\" id=\"^C0:vWRwu.k*~iPknSy|\" variabletype=\"boolean\">LWheelStopped</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"QSiBUe,PCPm|f1`+BTZm\"><field name=\"MOTOR\">LeftDT</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Pr;dO1o?ga/,B|{)bD%6\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"FQ/_/~!ej+Kye*:b9/,P\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><next><block type=\"v5_motion_spin\" id=\"nl4R8U6kARoGL]kPJxgk\"><field name=\"MOTOR\">LeftDT</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement><next><block type=\"v5_other_comment\" id=\"vUkBTYWZNe%ISLwQ;GD.\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"TKAS_!!v0-bukHzENLHR\"><field name=\"comment\">Right Middle Wheel</field></shadow></value><next><block type=\"v5_control_if_then_else\" id=\",`1rF:nB7qyiRF8u5V3^\"><value name=\"CONDITION\"><block type=\"v5_operator_and\" id=\"LD)^{H0)s!0@@5U1Bh/f\"><value name=\"OPERAND1\"><block type=\"v5_operator_less_than\" id=\"X!0TQ8:aXb6BUw;LF16X\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"]|`JJYf]TeI,~c.0?KD.\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"wuLQx62O424VJJ;*@eq.\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"~(9^(XymF]{98d7b-ny;\"><field name=\"NUM\">5</field></shadow></value></block></value><value name=\"OPERAND2\"><block type=\"v5_operator_greater_than\" id=\"X%5sDIJs!((|t7S,Q_G%\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"tY$4`_PMF}Dc/AgALcYO\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"?o_3;FJkO2BIQR~Ypv4`\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"jv{jzMMHwu[j#qBmewE:\"><field name=\"NUM\">-5</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"1`N?45Hz@vh{**mq-sI?\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"a0):C?nbFMZ[]eJfw3k,\"><field name=\"VARIABLE\" id=\"[vZA5ZLU)j3R#_BD6Bd~\" variabletype=\"boolean\">RWheelStopped</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_stop_motor\" id=\"{#_/WxIyS.#tEZM+pa#p\"><field name=\"MOTOR\">RightDT</field><next><block type=\"v5_variables_set_boolean_variable\" id=\"4cWdudI!es+xkDn}poUm\"><field name=\"VARIABLE\" id=\"[vZA5ZLU)j3R#_BD6Bd~\" variabletype=\"boolean\">RWheelStopped</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"!e%;[4J*+PN)h}+cOG:q\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></statement></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_variables_set_boolean_variable\" id=\"yl=hulJA:2]g/p|*SqSG\"><field name=\"VARIABLE\" id=\"[vZA5ZLU)j3R#_BD6Bd~\" variabletype=\"boolean\">RWheelStopped</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"K!_OIlKn#%8;?@K.2XD*\"><field name=\"VALUE\">true</field></shadow></value></block></statement><next><block type=\"v5_control_if_then\" id=\"Dl:ap+cRBtQDs5S7EDWn\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"nM+4.S+4::Pm,YS)NMIx\"><field name=\"VARIABLE\" id=\"[vZA5ZLU)j3R#_BD6Bd~\" variabletype=\"boolean\">RWheelStopped</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"~wn/$XM6r`Nh[`Zs*cVJ\"><field name=\"MOTOR\">RightDT</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Mp;eY(9b@WmO+|mjSq3J\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"Jg3_`+D1v,vHC)UFUI1l\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><next><block type=\"v5_motion_spin\" id=\"u4N,WM?T$zZMH$R(f:oG\"><field name=\"MOTOR\">RightDT</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[2,8,1,7,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[10],"name":"IntakeRollers","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[3],"name":"Catapult","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[4],"name":"LeftDT","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[9],"name":"RightDT","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Catapult","leftDir":"false","right":"IntakeRollers","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"tank","id":"primary"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotorA = motor(PORT2, ratio18_1, false);\nmotor leftMotorB = motor(PORT8, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT1, ratio18_1, true);\nmotor rightMotorB = motor(PORT7, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\nmotor IntakeRollers = motor(PORT10, ratio18_1, false);\n\nmotor Catapult = motor(PORT3, ratio18_1, false);\n\nmotor LeftDT = motor(PORT4, ratio18_1, false);\n\nmotor RightDT = motor(PORT9, ratio18_1, true);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool Controller1LeftShoulderControlMotorsStopped = true;\nbool Controller1RightShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3\n      // right = Axis2\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position();\n      int drivetrainRightSideSpeed = Controller1.Axis2.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonL1/ButtonL2 status to control Catapult\n      if (Controller1.ButtonL1.pressing()) {\n        Catapult.spin(forward);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonL2.pressing()) {\n        Catapult.spin(reverse);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (!Controller1LeftShoulderControlMotorsStopped) {\n        Catapult.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1LeftShoulderControlMotorsStopped = true;\n      }\n      // check the ButtonR1/ButtonR2 status to control IntakeRollers\n      if (Controller1.ButtonR1.pressing()) {\n        IntakeRollers.spin(forward);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonR2.pressing()) {\n        IntakeRollers.spin(reverse);\n        Controller1RightShoulderControlMotorsStopped = false;\n      } else if (!Controller1RightShoulderControlMotorsStopped) {\n        IntakeRollers.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1RightShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nbool RWheelStopped, LWheelStopped;\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  return 0;\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"Subscribe\");\n  IntakeRollers.setVelocity(90.0, percent);\n  Catapult.setVelocity(50.0, percent);\n  Drivetrain.setStopping(brake);\n  IntakeRollers.setStopping(brake);\n  Catapult.setStopping(hold);\n  while (true) {\n    // Left Middle Wheel\n    if (Controller1.Axis2.position() < 5.0 && Controller1.Axis2.position() > -5.0) {\n      if (LWheelStopped) {\n        LeftDT.stop();\n        LWheelStopped = false;\n      }\n    }\n    else {\n      LWheelStopped = true;\n    }\n    if (LWheelStopped) {\n      LeftDT.setVelocity(Controller1.Axis2.position(), percent);\n      LeftDT.spin(forward);\n    }\n    // Right Middle Wheel\n    if (Controller1.Axis3.position() < 5.0 && Controller1.Axis3.position() > -5.0) {\n      if (RWheelStopped) {\n        RightDT.stop();\n        RWheelStopped = false;\n      }\n    }\n    else {\n      RWheelStopped = true;\n    }\n    if (RWheelStopped) {\n      RightDT.setVelocity(Controller1.Axis3.position(), percent);\n      RightDT.spin(forward);\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}